<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.freedom.boot.dao.AdminMapper">
	<resultMap id="BaseResultMap" type="org.freedom.boot.bean.AdminInfo">
		<id column="admin_id" jdbcType="INTEGER" property="adminId" />
		<result column="username" property="username" />
		<collection property="adminRole" column="admin_id"
			ofType="org.freedom.boot.bean.AdminRole">
			<id column="user_role_id" property="userRoleId" />
			<result column="admin_id" property="adminId" />
			<result column="role_id" property="roleId" />
			<association property="role" column="role_id"
				javaType="org.freedom.boot.bean.Role">
				<id column="role_id" property="roleId" />
				<result column="name" property="name" />
				<result column="name_zh" property="nameZh" />
			</association>
		</collection>
	</resultMap>

	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>

	<sql id="Base_Column_List">
		tbl_role.name_zh,
		tbl_role.`name`,
		tbl_admin_role.role_id,
		tbl_admin_role.admin_id,
		tbl_admin_role.user_role_id,
		tbl_admin.admin_id,
		tbl_admin.`password`,
		tbl_admin.username
	</sql>

	<select id="selectByExample" parameterType="org.freedom.boot.bean.AdminRoleExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		FROM
		tbl_admin
		INNER JOIN tbl_admin_role ON tbl_admin_role.admin_id =
		tbl_admin.admin_id
		INNER JOIN tbl_role ON tbl_admin_role.role_id =
		tbl_role.role_id
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>

	<select id="selectByUserName" resultType="org.freedom.boot.bean.Admin">
		select
		*
		from tbl_admin
		where username = #{username}
	</select>

	<select id="selectAdminRolesByAdminId" resultType="org.freedom.boot.bean.Role">
		select tbl_role.role_id,tbl_role.name,tbl_role.name_zh
		from tbl_role
		join
		tbl_admin_role
		on tbl_role.role_id=tbl_admin_role.role_id
		where tbl_admin_role.admin_id=#{id}
	</select>

	<update id="updateByPrimaryKeySelective" parameterType="org.freedom.boot.bean.AdminInfo">
		update tbl_admin
		<set>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
		</set>
		where admin_id = #{adminId,jdbcType=INTEGER}
	</update>
	
	<insert id="insertSelective" useGeneratedKeys="true" keyColumn="admin_id"
		keyProperty="adminId" parameterType="org.freedom.boot.bean.AdminInfo">
    insert into tbl_admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="adminId != null">
        admin_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
       <if test="enabled != null">
        enabled,
      </if>
       <if test="locked != null">
        locked,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="adminId != null">
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
       <if test="enabled != null">
        #{enabled,jdbcType=TINYINT},
      </if>
      <if test="locked != null">
        #{locked,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		tbl_admin
		where admin_id = #{adminId,jdbcType=INTEGER}
	</delete>
	

</mapper>