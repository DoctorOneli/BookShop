<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "httbl://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.freedom.boot.dao.OrderMapper">
	<resultMap id="BaseResultMap" type="org.freedom.boot.bean.Order">
		<id column="order_id" jdbcType="INTEGER" property="orderId" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="order_state_id" jdbcType="INTEGER" property="orderStateId" />
		<result column="user_id" jdbcType="INTEGER" property="userId" />
		<result column="address_id" jdbcType="INTEGER" property="addressId" />
		<result column="flag" jdbcType="BIT" property="flag" />
	</resultMap>
	<resultMap extends="AllResultMap" id="ResultMapWithBLOBs"
		type="org.freedom.boot.bean.Order">
		<result column="remark" jdbcType="LONGVARCHAR" property="remark" />
	</resultMap>

	<resultMap id="AllResultMap" type="org.freedom.boot.bean.Order">
		<id column="order_id" jdbcType="INTEGER" property="orderId" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="order_state_id" jdbcType="INTEGER" property="orderStateId" />
		<result column="address_id" jdbcType="INTEGER" property="addressId" />
		<result column="order_no" property="orderNo" />
		<result column="express_no" property="expressNo" />
		<result column="express_company" property="expressCompany" />
		<result column="flag" jdbcType="BIT" property="flag" />
		<association property="address" column="address_id"
			javaType="org.freedom.boot.bean.Address">
			<id column="address_id" jdbcType="INTEGER" property="addressId" />
			<result column="receiver_name" jdbcType="VARCHAR" property="receiverName" />
			<result column="receiver_phone" jdbcType="VARCHAR" property="receiverPhone" />
			<result column="concrete_address" jdbcType="VARCHAR" property="concreteAddress" />
			<result column="province" jdbcType="VARCHAR" property="province" />
			<result column="city" jdbcType="VARCHAR" property="city" />
			<result column="area" jdbcType="VARCHAR" property="area" />
		</association>
		<association property="user" column="user_id"
			javaType="org.freedom.boot.bean.User">
			<id column="user_id" jdbcType="INTEGER" property="userId" />
			<result column="nick_name" jdbcType="VARCHAR" property="nickName" />
		</association>
		<collection property="orderItem" column="order_id"
			ofType="org.freedom.boot.bean.OrderItem">
			<id column="order_item_id" property="orderItemId" />
			<result column="count" property="count" />
			<result column="price" property="price" />
			<association property="book" column="book_id"
				javaType="org.freedom.boot.bean.BookWithBLOBs">
				<id column="book_id" property="bookId" />
				<result column="book_name" property="bookName" />
				<result column="book_author" property="bookAuthor" />
				<result column="book_img" property="bookImg" />
				<result column="book_cover" property="bookCover" />
			</association>
		</collection>

	</resultMap>

	<resultMap id="WithCancelResultMap" type="org.freedom.boot.bean.Order">
		<id column="order_id" jdbcType="INTEGER" property="orderId" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="order_state_id" jdbcType="INTEGER" property="orderStateId" />
		<result column="address_id" jdbcType="INTEGER" property="addressId" />
		<result column="order_no" property="orderNo" />
		<result column="flag" jdbcType="BIT" property="flag" />
		<result column="remark" jdbcType="LONGVARCHAR" property="remark" />
		<association property="address" column="address_id"
			javaType="org.freedom.boot.bean.Address">
			<id column="address_id" jdbcType="INTEGER" property="addressId" />
			<result column="receiver_name" jdbcType="VARCHAR" property="receiverName" />
			<result column="receiver_phone" jdbcType="VARCHAR" property="receiverPhone" />
			<result column="concrete_address" jdbcType="VARCHAR" property="concreteAddress" />
			<result column="province" jdbcType="VARCHAR" property="province" />
			<result column="city" jdbcType="VARCHAR" property="city" />
			<result column="area" jdbcType="VARCHAR" property="area" />
		</association>
		<association property="user" column="user_id"
			javaType="org.freedom.boot.bean.User">
			<id column="user_id" jdbcType="INTEGER" property="userId" />
			<result column="nick_name" jdbcType="VARCHAR" property="nickName" />
		</association>
		<association property="orderCancel" column="order_id"
			javaType="org.freedom.boot.bean.OrderCancel">
			<id column="order_cancel_id" jdbcType="INTEGER" property="orderCancelId" />
			<result column="order_id" jdbcType="INTEGER" property="orderId" />
			<result column="cancel_reason_id" jdbcType="INTEGER" property="cancelReasonId" />
			<result column="detail" jdbcType="VARCHAR" property="detail" />
		</association>
		<collection property="orderItem" column="order_id"
			ofType="org.freedom.boot.bean.OrderItem">
			<id column="order_item_id" property="orderItemId" />
			<result column="count" property="count" />
			<result column="price" property="price" />
			<association property="book" column="book_id"
				javaType="org.freedom.boot.bean.BookWithBLOBs">
				<id column="book_id" property="bookId" />
				<result column="book_name" property="bookName" />
				<result column="book_author" property="bookAuthor" />
				<result column="book_img" property="bookImg" />
				<result column="book_cover" property="bookCover" />
			</association>
		</collection>

	</resultMap>


	<resultMap id="WithAddressResultMap" type="org.freedom.boot.bean.Order">
		<id column="order_id" jdbcType="INTEGER" property="orderId" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="order_state_id" jdbcType="INTEGER" property="orderStateId" />
		<result column="flag" jdbcType="BIT" property="flag" />
		<association property="address" column="address_id"
			javaType="org.freedom.boot.bean.Address">
			<id column="address_id" property="addressId" />
			<result column="receiver_name" property="receiverName" />
			<result column="province" property="province" />
		</association>
		<association property="user" column="user_id"
			javaType="org.freedom.boot.bean.User">
			<id column="user_id" property="userId" />
			<result column="nick_name" property="nickName" />
			<result column="phone" property="phone" />
		</association>
		<association property="orderState" column="order_state_id"
			javaType="org.freedom.boot.bean.OrderState">
			<id column="order_state_id" property="orderStateId" />
			<result column="name" property="name" />
		</association>
	</resultMap>



	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		order_id, create_time, order_state_id, user_id, address_id,
		flag
	</sql>
	<sql id="Blob_Column_List">
		remark
	</sql>

	<sql id="All_Column_List">
		`tbl_order_item`.`order_item_id` AS `order_item_id`,
		`tbl_order`.`order_id` AS `order_id`,
		`tbl_order`.`create_time` AS
		`create_time`,
		`tbl_order`.`remark` AS
		`remark`,
		`tbl_order`.`order_state_id` AS `order_state_id`,
		`tbl_order_item`.`count` AS `count`,
		`tbl_order_item`.`price` AS
		`price`,
		`tbl_order_item`.`book_id` AS `book_id`,
		`tbl_order`.`flag` AS
		`flag`,
		`tbl_book`.`book_name` AS
		`book_name`,
		`tbl_book`.`book_author`
		AS
		`book_author`,
		`tbl_book`.`book_img` AS `book_img`,
		`tbl_order`.`address_id` AS
		`address_id`,
		`tbl_address`.`concrete_address` AS `concrete_address`,
		`tbl_book`.`book_cover` AS `book_cover`
	</sql>

	<sql id="OrderWithAddress_Column_List">
		`tbl_user`.`user_id` AS `user_id`,
		`tbl_user`.`nick_name` AS
		`nick_name`,
		`tbl_order`.`create_time` AS `create_time`,
		`tbl_order`.`order_id` AS `order_id`,
		`tbl_order_state`.`name` AS
		`name`,
		`tbl_order_state`.`order_state_id` AS `order_state_id`,
		`tbl_address`.`address_id` AS `address_id`,
		`tbl_address`.`receiver_name` AS `receiver_name`,
		`tbl_address`.`province` AS `province`,
		`tbl_address`.`concrete_address` AS `concrete_address`,
		`tbl_address`.`city` AS `city`,
		`tbl_address`.`area` AS `area`,
		`tbl_order`.`flag` AS `flag`
	</sql>

	<sql id="AdminOrderColumnList">
		`tbl_order`.`order_id` AS `order_id`,
		`tbl_order`.`create_time` AS `create_time`,
		`tbl_order`.`order_state_id` AS `order_state_id`,
		`tbl_order`.`user_id` AS `user_id`,
		`tbl_order`.`address_id` AS
		`address_id`,
		`tbl_order`.`remark` AS `remark`,
		`tbl_order`.`order_no`
		AS `order_no`,
		`tbl_order`.`express_no` AS `express_no`,
		`tbl_order`.`express_company` AS `express_company`,
		`tbl_order_item`.`order_item_id` AS `order_item_id`,
		`tbl_order_item`.`book_id` AS `book_id`,
		`tbl_order_item`.`count` AS
		`count`,
		`tbl_order_item`.`price` AS `price`,
		`tbl_book`.`book_name` AS
		`book_name`,
		`tbl_book`.`book_price` AS `book_price`,
		`tbl_address`.`receiver_name` AS `receiver_name`,
		`tbl_address`.`receiver_phone` AS `receiver_phone`,
		`tbl_address`.`concrete_address` AS `concrete_address`,
		`tbl_address`.`province` AS `province`,
		`tbl_address`.`city` AS `city`,
		`tbl_address`.`area` AS `area`,
		`tbl_user`.`nick_name` AS `nick_name`
	</sql>

	<sql id="AdminOrderCancelColumnList">
		`tbl_order`.`order_id` AS `order_id`,
		`tbl_order`.`create_time` AS `create_time`,
		`tbl_order`.`order_state_id` AS `order_state_id`,
		`tbl_order`.`user_id` AS `user_id`,
		`tbl_order`.`address_id` AS `address_id`,
		`tbl_order`.`remark` AS `remark`,
		`tbl_order`.`order_no` AS `order_no`,
		`tbl_order_cancel`.`order_cancel_id` AS `order_cancel_id`,
		`tbl_order_cancel`.`cancel_reason_id` AS `cancel_reason_id`,
		`tbl_order_cancel`.`detail` AS `detail`,
		`tbl_user`.`nick_name` AS `nick_name`,
		`tbl_order_item`.`book_id` AS `book_id`,
		`tbl_order_item`.`count` AS `count`,
		`tbl_order_item`.`price` AS `price`,
		`tbl_order_item`.`order_item_id` AS `order_item_id`,
		`tbl_book`.`book_name` AS `book_name`,
		`tbl_address`.`receiver_name` AS `receiver_name`,
		`tbl_address`.`receiver_phone` AS `receiver_phone`,
		`tbl_address`.`concrete_address` AS `concrete_address`,
		`tbl_address`.`province` AS `province`,
		`tbl_address`.`city` AS `city`,
		`tbl_address`.`area` AS `area`
	</sql>




	<select id="selectByExampleWithAll" parameterType="org.freedom.boot.bean.OrderExample"
		resultMap="AllResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="All_Column_List" />
		FROM
		(
		(
		( `tbl_order` JOIN `tbl_order_item` ON ( (
		`tbl_order_item`.`order_id` =
		`tbl_order`.`order_id` ) ) )
		JOIN
		`tbl_book`
		ON ( ( `tbl_order_item`.`book_id` = `tbl_book`.`book_id` ) )
		)
		JOIN
		`tbl_address` ON ( ( `tbl_order`.`address_id` =
		`tbl_address`.`address_id` ) )
		)
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>


	<select id="selectByExampleWithAddress" parameterType="org.freedom.boot.bean.OrderExample"
		resultMap="WithAddressResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="OrderWithAddress_Column_List" />
		FROM
		(
		(
		( `tbl_order` JOIN `tbl_user` ON ( ( `tbl_order`.`user_id` =
		`tbl_user`.`user_id` ) ) )
		JOIN `tbl_order_state` ON ( (
		`tbl_order`.`order_state_id` =
		`tbl_order_state`.`order_state_id` ) )
		)
		JOIN `tbl_address` ON ( ( ( `tbl_address`.`user_id` =
		`tbl_user`.`user_id` )
		AND ( `tbl_order`.`address_id` =
		`tbl_address`.`address_id` ) ) )
		)

		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>



	<select id="selectByExampleWithBLOBs" parameterType="org.freedom.boot.bean.OrderExample"
		resultMap="ResultMapWithBLOBs">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from tbl_order
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByExample" parameterType="org.freedom.boot.bean.OrderExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from tbl_order
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="ResultMapWithBLOBs">
		select
		<include refid="AdminOrderColumnList" />
		FROM
		(
		(
		(
		(
		( `tbl_order` JOIN `tbl_order_item` ON ( (
		`tbl_order_item`.`order_id`
		= `tbl_order`.`order_id` ) ) )
		JOIN
		`tbl_book` ON ( ( `tbl_order_item`.`book_id` = `tbl_book`.`book_id` )
		)
		)
		JOIN `tbl_address` ON ( ( `tbl_order`.`address_id` =
		`tbl_address`.`address_id` ) )
		)
		)
		JOIN `tbl_user` ON ( ( (
		`tbl_order`.`user_id` = `tbl_user`.`user_id`
		)
		AND (
		`tbl_address`.`user_id` = `tbl_user`.`user_id` ) ) )
		)
		where
		tbl_order.order_id =
		#{orderId,jdbcType=INTEGER}
	</select>

	<select id="selectOrderCancelByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="WithCancelResultMap">
		select
		<include refid="AdminOrderCancelColumnList" />
		FROM
		(
		(
		(
		(
		( `tbl_order` JOIN `tbl_order_cancel` ON ( (
		`tbl_order_cancel`.`order_id` = `tbl_order`.`order_id` ) ) )
		JOIN `tbl_order_item` ON ( ( `tbl_order_item`.`order_id` =
		`tbl_order`.`order_id` ) )
		)
		JOIN `tbl_user` ON ( ( `tbl_order`.`user_id` = `tbl_user`.`user_id` ) )
		)
		JOIN `tbl_book` ON ( ( `tbl_order_item`.`book_id` = `tbl_book`.`book_id` )
		)
		)
		JOIN `tbl_address` ON ( ( ( `tbl_address`.`user_id` = `tbl_user`.`user_id`
		) AND ( `tbl_order`.`address_id` = `tbl_address`.`address_id` ) ) )
		)
		where
		tbl_order.order_id =
		#{orderId,jdbcType=INTEGER}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		tbl_order
		where order_id = #{orderId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="org.freedom.boot.bean.OrderExample">
		delete from tbl_order
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="org.freedom.boot.bean.Order">
		insert into tbl_order
		(order_id, create_time, order_state_id,
		user_id, address_id, flag,
		remark)
		values (#{orderId,jdbcType=INTEGER},
		#{createTime,jdbcType=TIMESTAMP},
		#{orderStateId,jdbcType=INTEGER},
		#{userId,jdbcType=INTEGER}, #{addressId,jdbcType=INTEGER},
		#{flag,jdbcType=BIT},
		#{remark,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" useGeneratedKeys="true" keyColumn="order_id"
		keyProperty="orderId" parameterType="org.freedom.boot.bean.Order">
		insert into tbl_order
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="orderId != null">
				order_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="orderStateId != null">
				order_state_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="addressId != null">
				address_id,
			</if>
			<if test="flag != null">
				flag,
			</if>
			<if test="remark != null">
				remark,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="orderId != null">
				#{orderId,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="orderStateId != null">
				#{orderStateId,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="addressId != null">
				#{addressId,jdbcType=INTEGER},
			</if>
			<if test="flag != null">
				#{flag,jdbcType=BIT},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="org.freedom.boot.bean.OrderExample"
		resultType="java.lang.Long">
		select count(*) from tbl_order
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update tbl_order
		<set>
			<if test="record.orderId != null">
				order_id = #{record.orderId,jdbcType=INTEGER},
			</if>
			<if test="record.createTime != null">
				create_time = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.orderStateId != null">
				order_state_id = #{record.orderStateId,jdbcType=INTEGER},
			</if>
			<if test="record.userId != null">
				user_id = #{record.userId,jdbcType=INTEGER},
			</if>
			<if test="record.addressId != null">
				address_id = #{record.addressId,jdbcType=INTEGER},
			</if>
			<if test="record.flag != null">
				flag = #{record.flag,jdbcType=BIT},
			</if>
			<if test="record.remark != null">
				remark = #{record.remark,jdbcType=LONGVARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExampleWithBLOBs" parameterType="map">
		update tbl_order
		set order_id = #{record.orderId,jdbcType=INTEGER},
		create_time = #{record.createTime,jdbcType=TIMESTAMP},
		order_state_id =
		#{record.orderStateId,jdbcType=INTEGER},
		user_id =
		#{record.userId,jdbcType=INTEGER},
		address_id =
		#{record.addressId,jdbcType=INTEGER},
		flag =
		#{record.flag,jdbcType=BIT},
		remark =
		#{record.remark,jdbcType=LONGVARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update tbl_order
		set order_id = #{record.orderId,jdbcType=INTEGER},
		create_time = #{record.createTime,jdbcType=TIMESTAMP},
		order_state_id =
		#{record.orderStateId,jdbcType=INTEGER},
		user_id =
		#{record.userId,jdbcType=INTEGER},
		address_id =
		#{record.addressId,jdbcType=INTEGER},
		flag =
		#{record.flag,jdbcType=BIT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="org.freedom.boot.bean.Order">
		update tbl_order
		<set>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="orderStateId != null">
				order_state_id = #{orderStateId,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="addressId != null">
				address_id = #{addressId,jdbcType=INTEGER},
			</if>
			<if test="flag != null">
				flag = #{flag,jdbcType=BIT},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=LONGVARCHAR},
			</if>
				<if test="expressNo != null">
				express_no = #{expressNo,jdbcType=VARCHAR},
			</if>
				<if test="expressCompany != null">
				express_company = #{expressCompany,jdbcType=VARCHAR},
			</if>
		</set>
		where order_id = #{orderId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="org.freedom.boot.bean.Order">
		update
		tbl_order
		set create_time = #{createTime,jdbcType=TIMESTAMP},
		order_state_id = #{orderStateId,jdbcType=INTEGER},
		user_id =
		#{userId,jdbcType=INTEGER},
		address_id = #{addressId,jdbcType=INTEGER},
		flag = #{flag,jdbcType=BIT},
		remark = #{remark,jdbcType=LONGVARCHAR}
		where order_id = #{orderId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.freedom.boot.bean.Order">
		update tbl_order
		set create_time = #{createTime,jdbcType=TIMESTAMP},
		order_state_id =
		#{orderStateId,jdbcType=INTEGER},
		user_id = #{userId,jdbcType=INTEGER},
		address_id = #{addressId,jdbcType=INTEGER},
		flag = #{flag,jdbcType=BIT}
		where order_id = #{orderId,jdbcType=INTEGER}
	</update>
</mapper>